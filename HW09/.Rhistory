?is.na
is.na(module1predtrn-trainset$price)
poly(10,2)
poly(c(5,10),2)
poly(c(5,10),10)
poly(c(5,10),11)
?poly
poly(1:10,3)
polym(1:10,3)
rm(list=ls())
setwd('/home/aqeel/Study/DM/HW10/')
library(ggplot2)
data("diamonds")
diamonds<- diamonds[sample(nrow(diamonds)),]
trainset<-diamonds[seq(1,floor(0.8*nrow(diamonds))),]
testset<-diamonds[seq(floor(0.8*nrow(diamonds))+1,nrow(diamonds)),]
module1<-lm(price~.,data = trainset)
module2<-lm(price~.+poly(carat,2)+poly(depth,2)-carat-depth,data = trainset)
module3<-lm(price~.+poly(carat,3)+poly(depth,3)-carat-depth,data = trainset)
module4<-lm(price~.poly(carat,3)+poly(depth,3)+poly(x,2)+poly(y,2)+poly(z,2)-carat-depth-x-y-z,data = trainset)
module1predtrn<-predict(module1, trainset)
module2predtrn<-predict(module2, trainset)
module3predtrn<-predict(module3, trainset)
module4predtrn<-predict(module4, trainset)
module1predtst<-predict(module1, testset)
module2predtst<-predict(module2, testset)
module3predtst<-predict(module3, testset)
module4predtst<-predict(module4, testset)
rm(list=ls())
setwd('/home/aqeel/Study/DM/HW10/')
library(ggplot2)
data("diamonds")
diamonds<- diamonds[sample(nrow(diamonds)),]
trainset<-diamonds[seq(1,floor(0.8*nrow(diamonds))),]
testset<-diamonds[seq(floor(0.8*nrow(diamonds))+1,nrow(diamonds)),]
module1<-lm(price~.,data = trainset)
module2<-lm(price~.+poly(carat,2)+poly(depth,2)-carat-depth,data = trainset)
module3<-lm(price~.+poly(carat,3)+poly(depth,3)-carat-depth,data = trainset)
module4<-lm(price~.+poly(carat,3)+poly(depth,3)+poly(x,2)+poly(y,2)+poly(z,2)-carat-depth-x-y-z,data = trainset)
module1predtrn<-predict(module1, trainset)
module2predtrn<-predict(module2, trainset)
module3predtrn<-predict(module3, trainset)
module4predtrn<-predict(module4, trainset)
module1predtst<-predict(module1, testset)
module2predtst<-predict(module2, testset)
module3predtst<-predict(module3, testset)
module4predtst<-predict(module4, testset)
power(2,2)
?power
2^2
sum(sqrt((module1predtrn-trainset$price)^2))
sum(sqrt((module1predtrn-trainset$price)^2))
sum(sqrt((module2predtrn-trainset$price)^2))
sum(sqrt((module3predtrn-trainset$price)^2))
sum(sqrt((module4predtrn-trainset$price)^2))
sum(sqrt((module1predtar-testset$price)^2))
sum(sqrt((module1predtst-testset$price)^2))
sum(sqrt((module2predtst-testset$price)^2))
sum(sqrt((module3predtst-testset$price)^2))
sum(sqrt((module4predtst-testset$price)^2))
sum(sqrt((module1predtrn-trainset$price)^2/length(trainset$price)))
sum((module1predtrn-trainset$price)^2)
sqrt(sum((module1predtrn-trainset$price)^2)/length(trainset$price))
sqrt(sum((module1predtrn-trainset$price)^2)/length(trainset$price))
sqrt(sum((module2predtrn-trainset$price)^2)/length(trainset$price))
sqrt(sum((module3predtrn-trainset$price)^2)/length(trainset$price))
sqrt(sum((module4predtrn-trainset$price)^2)/length(trainset$price))
sqrt(sum((module1predtst-testset$price)^2)/length(testset$price))
sqrt(sum((module2predtst-testset$price)^2)/length(testset$price))
sqrt(sum((module3predtst-testset$price)^2)/length(testset$price))
sqrt(sum((module4predtst-testset$price)^2)/length(testset$price))
sqrt(sum((module1predtrn-trainset$price)^2)/length(trainset$price))
sqrt(sum((module1predtst-testset$price)^2)/length(testset$price))
model1 = lm(price ~ ., data = trainset)
pred1 = predict(model1, newdata = testset)
model2 = lm(price ~ carat^2 + carat + cut + color + clarity + depth^2 + depth + table  + x + y + z  , data = trainset)
pred2 = predict(model2, newdata = testset)
RMSE1_test = sqrt(mean((testset$price - pred1)^2))
sqrt(mean((testset$price - pred1)^2))
sqrt(mean((testset$price - pred1)^2))
sqrt(mean((testset$price - pred2)^2))
model2 = lm(price ~  cut + color + clarity + depth^2 + depth + table  + x + y + z+carat^2 + carat   , data = trainset)
pred2 = predict(model2, newdata = testset)
sqrt(mean((testset$price - pred1)^2))
sqrt(mean((testset$price - pred2)^2))
model2 = lm(price ~  cut + color + clarity +poly(depth,2) + table  + x + y + z+poly(carat,2)   , data = trainset)
pred2 = predict(model2, newdata = testset)
sqrt(mean((testset$price - pred1)^2))
sqrt(mean((testset$price - pred2)^2))
depth^2 + depth
cbind(trainset$depth,trainset$depth^2)
cbind(poly(trainset$depth,2))
cbind(trainset$depth,trainset$depth^2)
cbind(poly(trainset$depth,2))
cbind(polym(trainset$depth,2))
?poly
poly(1:10,3)
poly(1:10,1)
?poly
trainRMSE<-c(sqrt(sum((module1predtrn-trainset$price)^2)/length(trainset$price)),
sqrt(sum((module2predtrn-trainset$price)^2)/length(trainset$price)),
sqrt(sum((module3predtrn-trainset$price)^2)/length(trainset$price)),
sqrt(sum((module4predtrn-trainset$price)^2)/length(trainset$price)))
testRMSE<-c(sqrt(sum((module1predtst-testset$price)^2)/length(testset$price)),
sqrt(sum((module2predtst-testset$price)^2)/length(testset$price)),
sqrt(sum((module3predtst-testset$price)^2)/length(testset$price)),
sqrt(sum((module4predtst-testset$price)^2)/length(testset$price)))
numbers<-seq(1,4,1)
numbers
testRMSE
trainRMSE
ggplot(cbind(numbers,testRMSE))
ggplot(data.frame(cbind(numbers,testRMSE)))
ggplot(data.frame(cbind(numbers,testRMSE)))+geom_point()
plot(data.frame(cbind(numbers,testRMSE)))
data.frame(cbind(numbers,testRMSE))
ggplot(data.frame(cbind(numbers,testRMSE)), aes(numbers, testRMSE))+geom_point()
testRMSE
testRMSE<-testRMSE/1000
ggplot(data.frame(cbind(numbers,testRMSE)), aes(numbers, testRMSE))+geom_point()
testRMSE<-c(sqrt(sum((module1predtst-testset$price)^2)/length(testset$price)),
sqrt(sum((module2predtst-testset$price)^2)/length(testset$price)),
sqrt(sum((module3predtst-testset$price)^2)/length(testset$price)),
sqrt(sum((module4predtst-testset$price)^2)/length(testset$price)))
testRMSE<-testRMSE/max(testRMSE)
ggplot(data.frame(cbind(numbers,testRMSE)), aes(numbers, testRMSE))+geom_point()
ggplot(data.frame(cbind(numbers,trainRMSE)), aes(numbers, trainRMSE))+geom_point()
ggplot(data.frame(cbind(numbers,trainRMSE)), aes(numbers, trainRMSE))+geom_line()
testRMSE<-c(sqrt(sum((module1predtst-testset$price)^2)/length(testset$price)),
sqrt(sum((module2predtst-testset$price)^2)/length(testset$price)),
sqrt(sum((module3predtst-testset$price)^2)/length(testset$price)),
sqrt(sum((module4predtst-testset$price)^2)/length(testset$price)))
ggplot(data.frame(cbind(numbers,testRMSE)), aes(numbers, testRMSE))+geom_line()
rm(list=ls())
setwd('/home/aqeel/Study/DM/HW10/')
library(ggplot2)
data("diamonds")
diamonds<- diamonds[sample(nrow(diamonds)),]
trainset<-diamonds[seq(1,floor(0.8*nrow(diamonds))),]
testset<-diamonds[seq(floor(0.8*nrow(diamonds))+1,nrow(diamonds)),]
module1<-lm(price~.,data = trainset)
module2<-lm(price~.+poly(carat,2)+poly(depth,2)-carat-depth,data = trainset)
module3<-lm(price~.+poly(carat,3)+poly(depth,3)-carat-depth,data = trainset)
module4<-lm(price~.+poly(carat,3)+poly(depth,3)+poly(x,2)+poly(y,2)+poly(z,2)-carat-depth-x-y-z,data = trainset)
module1predtrn<-predict(module1, trainset)
module2predtrn<-predict(module2, trainset)
module3predtrn<-predict(module3, trainset)
module4predtrn<-predict(module4, trainset)
module1predtst<-predict(module1, testset)
module2predtst<-predict(module2, testset)
module3predtst<-predict(module3, testset)
module4predtst<-predict(module4, testset)
#install.packages("qpcR")
library(qpcR)
trainRMSE<-c(sqrt(sum((module1predtrn-trainset$price)^2)/length(trainset$price)),
sqrt(sum((module2predtrn-trainset$price)^2)/length(trainset$price)),
sqrt(sum((module3predtrn-trainset$price)^2)/length(trainset$price)),
sqrt(sum((module4predtrn-trainset$price)^2)/length(trainset$price)))
testRMSE<-c(sqrt(sum((module1predtst-testset$price)^2)/length(testset$price)),
sqrt(sum((module2predtst-testset$price)^2)/length(testset$price)),
sqrt(sum((module3predtst-testset$price)^2)/length(testset$price)),
sqrt(sum((module4predtst-testset$price)^2)/length(testset$price)))
testRMSE<-testRMSE/max(testRMSE)
numbers<-seq(1,4,1)
ggplot(data.frame(cbind(numbers,testRMSE)), aes(numbers, testRMSE))+geom_line()
testRMSE<-c(sqrt(sum((module1predtst-testset$price)^2)/length(testset$price)),
sqrt(sum((module2predtst-testset$price)^2)/length(testset$price)),
sqrt(sum((module3predtst-testset$price)^2)/length(testset$price)),
sqrt(sum((module4predtst-testset$price)^2)/length(testset$price)))
numbers<-seq(1,4,1)
ggplot(data.frame(cbind(numbers,testRMSE)), aes(numbers, testRMSE))+geom_line()
ggplot(data.frame(cbind(numbers,trainRMSE)), aes(numbers, trainRMSE))+geom_line()
ggplot(data.frame(cbind(numbers,testRMSE)), aes(numbers, testRMSE))+geom_line()
ggplot(data.frame(cbind(numbers,trainRMSE)),
aes(numbers, trainRMSE))+geom_line() + geom_abline(numbers~testRMSE,data =data.frame(cbind(numbers,testRMSE)) )
ggplot(data.frame(cbind(numbers,trainRMSE)),
aes(numbers, trainRMSE))+geom_line() + geom_abline(aes(numbers,testRMSE),data =data.frame(cbind(numbers,testRMSE)) )
ggplot(data.frame(cbind(numbers,trainRMSE)),
aes(numbers, trainRMSE))+geom_line() + geom_line(aes(numbers,testRMSE),data =data.frame(cbind(numbers,testRMSE)) )
?geom_line
ggplot(data.frame(cbind(numbers,trainRMSE)),
aes(numbers, trainRMSE))+geom_line(col="red") + geom_line(aes(numbers,testRMSE),data =data.frame(cbind(numbers,testRMSE)) )
ggplot(data.frame(cbind(numbers,trainRMSE)),
aes(numbers, trainRMSE))+geom_line(col="red") + geom_line(aes(numbers,testRMSE),data =data.frame(cbind(numbers,testRMSE)),col="blue" )
png('train_test.png')
ggplot(data.frame(cbind(numbers,trainRMSE)),
aes(numbers, trainRMSE))+geom_line(col="red") + geom_line(aes(numbers,testRMSE),data =data.frame(cbind(numbers,testRMSE)),col="blue" )
dev.off()
ggplot(data.frame(cbind(numbers,trainRMSE)),ylab="Module"
aes(numbers, trainRMSE))+geom_line(col="red") + geom_line(aes(numbers,testRMSE),data =data.frame(cbind(numbers,testRMSE)),col="blue" )
ggplot(data.frame(cbind(numbers,trainRMSE)),ylab="Module" ,
aes(numbers, trainRMSE))+geom_line(col="red") + geom_line(aes(numbers,testRMSE),data =data.frame(cbind(numbers,testRMSE)),col="blue" )
ggplot(data.frame(cbind(numbers,trainRMSE)),aes(numbers, trainRMSE))+geom_line(col="red") +
geom_line(aes(numbers,testRMSE),data =data.frame(cbind(numbers,testRMSE)),col="blue" )+ ylab("Module")
ggplot(data.frame(cbind(numbers,trainRMSE)),aes(numbers, trainRMSE))+geom_line(col="red") +
geom_line(aes(numbers,testRMSE),data =data.frame(cbind(numbers,testRMSE)),col="blue" )+ xlab("Module")+
ylab("RSME")
ggplot(data.frame(cbind(numbers,trainRMSE)),aes(numbers, trainRMSE))+geom_line(col="red") +
geom_line(aes(numbers,testRMSE),data =data.frame(cbind(numbers,testRMSE)),col="blue" )+ xlab("Module")+
ylab("RSME")+title("Train vs Test RMSE")
ggplot(data.frame(cbind(numbers,trainRMSE)),aes(numbers, trainRMSE),title="hi")+geom_line(col="red") +
geom_line(aes(numbers,testRMSE),data =data.frame(cbind(numbers,testRMSE)),col="blue" )+ xlab("Module")+
ylab("RSME")++title("Train vs Test RMSE(Train")
ggplot(data.frame(cbind(numbers,trainRMSE)),aes(numbers, trainRMSE),title="hi")+geom_line(col="red") +
geom_line(aes(numbers,testRMSE),data =data.frame(cbind(numbers,testRMSE)),col="blue" )+ xlab("Module")+
ylab("RSME")
ggplot(data.frame(cbind(numbers,trainRMSE)),aes(numbers, trainRMSE),main="hi")+geom_line(col="red") +
geom_line(aes(numbers,testRMSE),data =data.frame(cbind(numbers,testRMSE)),col="blue" )+ xlab("Module")+
ylab("RSME")
png('train_test.png')
ggplot(data.frame(cbind(numbers,trainRMSE)),aes(numbers, trainRMSE))+geom_line(col="red") +
geom_line(aes(numbers,testRMSE),data =data.frame(cbind(numbers,testRMSE)),col="blue" )+ xlab("Module")+
ylab("RSME")
dev.off()
ggplot(data.frame(cbind(numbers,trainRMSE)),aes(numbers, trainRMSE))+geom_line(col="red") +
geom_line(aes(numbers,testRMSE),data =data.frame(cbind(numbers,testRMSE)),col="blue" )+ xlab("Module")+
ylab("RSME")
library(MASS)
module4ridge<- lm.ridge(price~.+poly(carat,3)+poly(depth,3)+poly(x,2)+poly(y,2)+poly(z,2)-carat-depth-x-y-z,data = trainset)
module4predtrnridge<-predict(module4ridge, trainset)
module4ridge.tst.prd = scale(testset,center = F, scale = module4ridge$scales)%*% module4ridge$coef[,which.min(module4ridge$GCV)] + module4ridge$ym
module4ridge.trn.prd = scale(trainset,center = F, scale = module4ridge$scales)%*% module4ridge$coef[,which.min(module4ridge$GCV)] + module4ridge$ym
module4ridge<- lm.ridge(price~.+poly(carat,3)+poly(depth,3)+poly(x,2)+poly(y,2)+poly(z,2)-carat-depth-x-y-z,data = trainset)
module4ridge.tst.prd = scale(testset,center = F, scale = module4ridge$scales)%*% module4ridge$coef[,which.min(module4ridge$GCV)] + module4ridge$ym
head(cbind(diamonds[,1:6],diamonds[8:10]))
module4ridge.tst.prd = scale(cbind(testset[,1:6],testset[8:10]),center = F, scale = module4ridge$scales)%*% module4ridge$coef[,which.min(module4ridge$GCV)] + module4ridge$ym
scale(cbind(testset[,1:6],testset[8:10]),center = F, scale = module4ridge$scales)
?scale
module4ridge$scales
scale(data.test[,1:8],center = F, scale = module4ridge$scales)
scale(testset[,1:8],center = F, scale = module4ridge$scales)
length(module4ridge$scales)
module4ridge<- lm.ridge(price~.,data = trainset)
length(module4ridge$scales)
module4ridge$scales
scale(testset,center = F, scale = module4ridge$scales)
install.packages("glmnt")
install.packages("glmnet")
library(glmnet)
?glmnet
mod4trnpred<-glmnet(cbind(trainset[,1:6],trainset[8:10]),trainset[,7])
cbind(trainset[,1:6],trainset[8:10])
module4ridge<-lm(price~.+poly(carat,3)+poly(depth,3)+poly(x,2)+poly(y,2)+poly(z,2)-carat-depth-x-y-z,data = trainset)
module4ridge<- lm.ridge(price~.+poly(carat,3)+poly(depth,3)+poly(x,2)+poly(y,2)+poly(z,2)-carat-depth-x-y-z,data = trainset)
?glmnet
?lm.ridge
y.pred.ridge = scale(data.test[,1:8],center = F, scale = module4ridge$scales)%*% module4ridge$coef[,which.min(module4ridge$GCV)] + module4ridge$ym
y.pred.ridge = scale(trainset[,1:8],center = F, scale = module4ridge$scales)%*% module4ridge$coef[,which.min(module4ridge$GCV)] + module4ridge$ym
y.pred.ridge = scale(cbind(testset[,1:6],testset[8:10],center = F, scale = module4ridge$scales)%*% module4ridge$coef[,which.min(module4ridge$GCV)] + module4ridge$ym
)
y.pred.ridge = scale(cbind(testset[,1:6],testset[8:10]),center = F, scale = module4ridge$scales)%*% module4ridge$coef[,which.min(module4ridge$GCV)] + module4ridge$ym
y.pred.ridge = scale(trainset,center = F, scale = module4ridge$scales)%*% module4ridge$coef[,which.min(module4ridge$GCV)] + module4ridge$ym
y.pred.ridge = scale(model.matrix(price~.+poly(carat,3)+poly(depth,3)+poly(x,2)+poly(y,2)+poly(z,2)-carat-depth-x-y-z,trainset),center = F, scale = module4ridge$scales)%*% module4ridge$coef[,which.min(module4ridge$GCV)] + module4ridge$ym
y.pred.ridge = as.matrix(model.matrix(price~.+poly(carat,3)+poly(depth,3)+poly(x,2)+poly(y,2)+poly(z,2)-carat-depth-x-y-z,trainset))%*% coef(model)
y.pred.ridge = as.matrix(model.matrix(price~.+poly(carat,3)+poly(depth,3)+poly(x,2)+poly(y,2)+poly(z,2)-carat-depth-x-y-z,trainset))%*% coef(module4ridge)
rm(y.pred.ridge)
module4ridge.trn.prd = as.matrix(model.matrix(price~.+poly(carat,3)+poly(depth,3)+poly(x,2)+poly(y,2)+poly(z,2)-carat-depth-x-y-z,trainset))%*% coef(module4ridge)
sqrt(sum((module4ridge.trn.prd- trainset$price)^2)/length(trainset$price)))
sqrt(sum((module4ridge.trn.prd- trainset$price)^2)/length(trainset$price))
module4ridge.tst.prd = as.matrix(model.matrix(price~.+poly(carat,3)+poly(depth,3)+poly(x,2)+poly(y,2)+poly(z,2)-carat-depth-x-y-z,testset))%*% coef(module4ridge)
sqrt(sum((module4ridge.trn.prd- trainset$price)^2)/length(trainset$price))
sqrt(sum((module4ridge.trn.prd- testset$price)^2)/length(testset$price))
library(lars)
install.packages(lars)
install.packages("lars")
library(lars)
module4lasso <- lars(
model.matrix(price~.+poly(carat,3)+poly(depth,3)+poly(x,2)+poly(y,2)+poly(z,2)-carat-depth-x-y-z,trainset),
trainset$price, type="lasso",trace = TRUE, max.steps=20)
summary(model6_training)
summary(module4lasso)
module4lasso.trn.prd <- predict(module4lasso,
model.matrix(price~.+poly(carat,3)+poly(depth,3)+poly(x,2)+poly(y,2)+poly(z,2)-carat-depth-x-y-z,trainset),
s=module4lasso$df[which.min(module4lasso$RSS)], type="fit")$fit
sqrt(sum((module4ridge.tst.prd- testset$price)^2)/length(testset$price))
sqrt(sum((module4ridge.trn.prd- trainset$price)^2)/length(trainset$price))
sqrt(sum((module4ridge.tst.prd- testset$price)^2)/length(testset$price))
sqrt(sum(( module4lasso.trn.prd- trainset$price)^2)/length(trainset$price))
module4lasso.tst.prd <- predict(module4lasso,
model.matrix(price~.+poly(carat,3)+poly(depth,3)+poly(x,2)+poly(y,2)+poly(z,2)-carat-depth-x-y-z,testset),
s=module4lasso$df[which.min(module4lasso$RSS)], type="fit")$fit
sqrt(sum(( module4lasso.tst.prd- testset$price)^2)/length(testset$price))
ggplot(data.frame(cbind(numbers,trainRMSE)),aes(numbers, trainRMSE))+geom_line(col="red") +
geom_line(aes(numbers,testRMSE),data =data.frame(cbind(numbers,testRMSE)),col="blue" )+ xlab("Module")+
ylab("RSME")
?geom_point
sqrt(sum(( module4lasso.trn.prd- trainset$price)^2)/length(trainset$price))
sqrt(sum(( module4lasso.tst.prd- testset$price)^2)/length(testset$price))
sqrt(sum((module4ridge.trn.prd- trainset$price)^2)/length(trainset$price))
sqrt(sum((module4ridge.tst.prd- testset$price)^2)/length(testset$price))
sqrt(sum(( module4lasso.tst.prd- testset$price)^2)/length(testset$price))
trainRMSE<-c(sqrt(sum((module1predtrn-trainset$price)^2)/length(trainset$price)),
sqrt(sum((module2predtrn-trainset$price)^2)/length(trainset$price)),
sqrt(sum((module3predtrn-trainset$price)^2)/length(trainset$price)),
sqrt(sum((module4predtrn-trainset$price)^2)/length(trainset$price)),
sqrt(sum(( module4lasso.trn.prd- trainset$price)^2)/length(trainset$price)),
sqrt(sum((module4ridge.trn.prd- trainset$price)^2)/length(trainset$price)))
testRMSE<-c(sqrt(sum((module1predtst-testset$price)^2)/length(testset$price)),
sqrt(sum((module2predtst-testset$price)^2)/length(testset$price)),
sqrt(sum((module3predtst-testset$price)^2)/length(testset$price)),
sqrt(sum((module4predtst-testset$price)^2)/length(testset$price)),
sqrt(sum(( module4lasso.tst.prd- testset$price)^2)/length(testset$price)),
sqrt(sum((module4ridge.tst.prd- testset$price)^2)/length(testset$price)))
png('all_modules.png')
ggplot(data.frame(cbind(numbers,trainRMSE)),aes(numbers, trainRMSE))+geom_line(col="red") +
geom_line(aes(numbers,testRMSE),data =data.frame(cbind(numbers,testRMSE)),col="blue" )+ xlab("Module")+
ylab("RSME")+?geom_point()
dev.off()
png('all_modules.png')
ggplot(data.frame(cbind(numbers,trainRMSE)),aes(numbers, trainRMSE))+geom_line(col="red") +
geom_line(aes(numbers,testRMSE),data =data.frame(cbind(numbers,testRMSE)),col="blue" )+ xlab("Module")+
ylab("RSME")
dev.off()
numbers<-seq(1,6,1)
png('all_modules.png')
ggplot(data.frame(cbind(numbers,trainRMSE)),aes(numbers, trainRMSE))+geom_line(col="red") +
geom_line(aes(numbers,testRMSE),data =data.frame(cbind(numbers,testRMSE)),col="blue" )+ xlab("Module")+
ylab("RSME")
dev.off()
rm(list=ls())
setwd('/home/aqeel/Study/DM/HW10/')
train <- read.csv('train.csv',header = TRUE)
cor(train)
module<-lm(data = train,target~.)
summary(train)
summary(module)
module<-lm(data = train,target~conns_new+time+ccf_old+agegroup+browserID+days+usage1+usage3+usage4+usage5)
summary(module)
test<-read.csv('test.csv',header = TRUE)
head(test[,c(1,2)])
result<-predict(module,test)
output<-cbind(result)
colnames(output)<-c('ID','target')
write.csv(output,file='submit 001')
module<-lm(data = train,target~connections+foreign_conns+foreign_conns2+ccf+poly(conns_new,4)+poly(time,2)+
poly(ccf_old,2)+account_age+poly(agegroup,4)+poly(browserID,3)+poly(days,4)+poly(usage1,4)+
usage2+poly(usage3,4)+poly(usage4,4)+poly(usage5,4)+poly(usage5,4))
module<-lm(data = train,target~connections+foreign_conns+foreign_conns2+ccf+poly(conns_new,4)+poly(time,2)+
poly(ccf_old,2)+account_age+poly(agegroup,3)+poly(browserID,3)+poly(days,4)+poly(usage1,4)+
usage2+poly(usage3,4)+poly(usage4,4)+poly(usage5,4)+poly(usage5,4))
summary(module)
test<-read.csv('test.csv',header = TRUE)
result<-predict(module,test)
output<-cbind(result)
colnames(output)<-c('ID','target')
write.csv(output,file='submit 003')
summary(module)
trainset<-train[ floor(0.8*nrow(train)),]
trainset<-train[seq(0,floor(0.8*nrow(train)),1),]
testset<-train[seq(floor(0.8*nrow(train))+1,nrow(train),1),]
trainingRMSE<- predict(module,testset)
trainingRMSE
trainingRMSE<- sqrt(mean((predict(module,testset)- testset$target)^2))
trainingRMSE
trainmixed<-train[sample(nrow(train)),]
trainmixed<-train[sample(nrow(train)),]
trainset<-trainmixed[seq(0,floor(0.8*nrow(trainmixed)),1),]
testset<-trainmixed[seq(floor(0.8*nrow(trainmixed))+1,nrow(trainmixed),1),]
module<-lm(data = trainset,target~connections+foreign_conns+foreign_conns2+ccf+poly(conns_new,4)+poly(time,2)+
poly(ccf_old,2)+account_age+poly(agegroup,3)+poly(browserID,3)+poly(days,4)+poly(usage1,4)+
usage2+poly(usage3,4)+poly(usage4,4)+poly(usage5,4)+poly(usage5,4))
trainingRMSE<- sqrt(mean((predict(module,testset)- testset$target)^2))
trainingRMSE
module<-glm(data = trainset,target~connections+foreign_conns+foreign_conns2+ccf+poly(conns_new,4)+poly(time,2)+
poly(ccf_old,2)+account_age+poly(agegroup,3)+poly(browserID,3)+poly(days,4)+poly(usage1,4)+
usage2+poly(usage3,4)+poly(usage4,4)+poly(usage5,4)+poly(usage5,4))
trainingRMSE<- sqrt(mean((predict(module,testset)- testset$target)^2))
trainingRMSE
module<-lm(data = trainset,target~connections+foreign_conns+foreign_conns2+ccf+poly(conns_new,4)+poly(time,2)+
poly(ccf_old,2)+account_age+poly(agegroup,3)+poly(browserID,3)+poly(days,4)+poly(usage1,4)+
usage2+poly(usage3,4)+poly(usage4,4)+poly(usage5,4)+poly(usage5,4))
trainingRMSE<- sqrt(mean((predict(module,testset)- testset$target)^2))
trainingRMSE
module<-lm(data = trainset,target~connections+foreign_conns+foreign_conns2+ccf+poly(conns_new,4)+poly(time,2)+
poly(ccf_old,2)+account_age+poly(agegroup,3)+poly(browserID,3)+poly(days,4)+poly(usage1,4)+
usage2+poly(usage3,4)+poly(usage4,4)+poly(usage5,4)+poly(usage5,4))
sqrt(mean((predict(module,testset)- testset$target)^2))
module<-lm(data = trainset,target~connections+foreign_conns+foreign_conns2+ccf+poly(conns_new,4)+poly(time,2)+
poly(ccf_old,2)+account_age+poly(agegroup,3)+poly(browserID,3)+poly(days,4)+poly(usage1,4)+
usage2+poly(usage3,4)+poly(usage4,4)+poly(usage5,5)+poly(usage5,4))
sqrt(mean((predict(module,testset)- testset$target)^2))
summary(module)
module<-lm(data = trainset,target~connections+foreign_conns+foreign_conns2+ccf+poly(conns_new,4)+poly(time,2)+
poly(ccf_old,2)+account_age+poly(agegroup,3)+poly(browserID,3)+poly(days,4)+poly(usage1,4)+
usage2+poly(usage3,4)+poly(usage4,4)+poly(usage5,4))
sqrt(mean((predict(module,testset)- testset$target)^2))
summary(module)
module<-lm(data = trainset,target~connections+foreign_conns+foreign_conns2+ccf+poly(conns_new,4)+poly(time,2)+
poly(ccf_old,2)+account_age+poly(agegroup,3)+poly(browserID,3)+poly(days,4)+poly(usage1,2)+
usage2+poly(usage3,4)+poly(usage4,4)+poly(usage5,4))
summary(module)
module<-lm(data = trainset,target~connections+foreign_conns+foreign_conns2+ccf+poly(conns_new,4)+poly(time,2)+
poly(ccf_old,2)+account_age+poly(agegroup,3)+poly(browserID,3)+poly(days,4)+poly(usage1,2)+
usage2+poly(usage3,4)+poly(usage4,4)+poly(usage5,4))
sqrt(mean((predict(module,testset)- testset$target)^2))
summary(module)
test<-read.csv('test.csv',header = TRUE)
module<-lm(data = trainset,target~connections+foreign_conns+foreign_conns2+ccf+poly(conns_new,4)+poly(time,2)+
poly(ccf_old,2)+account_age+poly(agegroup,3)+poly(browserID,3)+poly(days,4)+poly(usage1,2)+
usage2+poly(usage3,4)+poly(usage4,4)+poly(usage5,4))
sqrt(mean((predict(module,testset)- testset$target)^2))
summary(module)
module<-lm(data = trainset,target~connections+foreign_conns+foreign_conns2+ccf+poly(conns_new,4)+poly(time,2)+
poly(ccf_old,2)+account_age+poly(agegroup,3)+browserID+poly(days,4)+poly(usage1,2)+
usage2+poly(usage3,4)+poly(usage4,4)+poly(usage5,4))
sqrt(mean((predict(module,testset)- testset$target)^2))
trainmixed<-train[sample(nrow(train)),]
trainset<-trainmixed[seq(0,floor(0.8*nrow(trainmixed)),1),]
testset<-trainmixed[seq(floor(0.8*nrow(trainmixed))+1,nrow(trainmixed),1),]
module<-lm(data = trainset,target~connections+foreign_conns+foreign_conns2+ccf+poly(conns_new,4)+poly(time,2)+
poly(ccf_old,2)+account_age+poly(agegroup,3)+browserID+poly(days,4)+poly(usage1,2)+
usage2+poly(usage3,4)+poly(usage4,4)+poly(usage5,4))
sqrt(mean((predict(module,testset)- testset$target)^2))
cor(train)
trainmixed<-train[sample(nrow(train)),]
cor(train)
rm(list=ls())
setwd('/home/aqeel/Study/DM/HW10/')
train <- read.csv('train.csv',header = TRUE)
cor(train)
trainmixed<-train[sample(nrow(train)),]
trainset<-trainmixed[seq(0,floor(0.8*nrow(trainmixed)),1),]
testset<-trainmixed[seq(floor(0.8*nrow(trainmixed))+1,nrow(trainmixed),1),]
View(trainmixed)
length(train[train$target==0])
nrow(train[train$target==0])
train$target==0
length(which(train$target==0)
)
table(train$target)
dim(table(train$target))
sort(table(train$target)
sort(table(train$target))
sort(table(train$target))
full<- train[train$target==10,]
head(full)
View(full)
min(full$account_age)
empty<-train[train$target==0,]
View(empty)
min(train$account_age)
max(train$account_age)
max(full$account_age)
rm(list=ls())
setwd('/home/aqeel/Study/DM/HW10/')
train <- read.csv('train.csv',header = TRUE)
cor(train)
trainmixed<-train[sample(nrow(train)),]
trainset<-trainmixed[seq(0,floor(0.8*nrow(trainmixed)),1),]
testset<-trainmixed[seq(floor(0.8*nrow(trainmixed))+1,nrow(trainmixed),1),]
module<-lm(data = trainset,target~connections+foreign_conns+foreign_conns2+ccf+poly(conns_new,4)+poly(time,2)+
poly(ccf_old,2)+account_age+poly(agegroup,3)+browserID+poly(days,4)+poly(usage1,2)+
usage2+poly(usage3,4)+poly(usage4,4)+poly(usage5,4))
sqrt(mean((predict(module,testset)- testset$target)^2))
summary(module)
module<-lm(data = trainset,target~connections+foreign_conns+foreign_conns2+ccf+poly(conns_new,4)+poly(time,2)+
poly(ccf_old,2)+account_age+poly(agegroup,3)+browserID+poly(days,4)+poly(usage1,2)+
usage2+poly(usage3,4)+poly(usage4,4)+poly(usage5,2))
sqrt(mean((predict(module,testset)- testset$target)^2))
View(train)
seq(12,16,1)
train$sumusage<- rowsum(train[,seq(12,16,1)])
rowSums(train[,seq(12,16,1)])
train$sumusage<- rowSums(train[,seq(12,16,1)])
View(train)
cor(train)
trainmixed<-train[sample(nrow(train)),]
trainset<-trainmixed[seq(0,floor(0.8*nrow(trainmixed)),1),]
testset<-trainmixed[seq(floor(0.8*nrow(trainmixed))+1,nrow(trainmixed),1),]
module<-lm(data = trainset,target~connections+foreign_conns+foreign_conns2+ccf+poly(conns_new,4)+poly(time,2)+
poly(ccf_old,2)+account_age+poly(agegroup,3)+browserID+poly(days,4)+poly(usage1,2)+
usage2+poly(usage3,4)+poly(usage4,4)+poly(usage5,2)+sumusage)
sqrt(mean((predict(module,testset)- testset$target)^2))
summary(module)
sqrt(mean((predict(module,testset)- testset$target)^2))
sqrt(mean((predict(module,testset)- testset$target)^2))
trainset<-trainmixed[seq(0,floor(0.8*nrow(trainmixed)),1),]
testset<-trainmixed[seq(floor(0.8*nrow(trainmixed))+1,nrow(trainmixed),1),]
module<-lm(data = trainset,target~connections+foreign_conns+foreign_conns2+ccf+poly(conns_new,4)+poly(time,2)+
poly(ccf_old,2)+account_age+poly(agegroup,3)+browserID+poly(days,4)+poly(usage1,2)+
usage2+poly(usage3,4)+poly(usage4,4)+poly(usage5,2)+sumusage)
sqrt(mean((predict(module,testset)- testset$target)^2))
summary(module)
trainmixed<-train[sample(nrow(train)),]
trainset<-trainmixed[seq(0,floor(0.8*nrow(trainmixed)),1),]
testset<-trainmixed[seq(floor(0.8*nrow(trainmixed))+1,nrow(trainmixed),1),]
module<-lm(data = trainset,target~connections+foreign_conns+foreign_conns2+ccf+poly(conns_new,4)+poly(time,2)+
poly(ccf_old,2)+account_age+poly(agegroup,3)+browserID+poly(days,4)+poly(usage1,2)+
usage2+poly(usage3,4)+poly(usage4,4)+poly(usage5,2)+sumusage)
sqrt(mean((predict(module,testset)- testset$target)^2))
summary(module)
View(train)
rm(list= ls())
setwd('/home/aqeel/Study/DM/HW09/')
houses<- read.csv('housing.data',header = FALSE,sep = '')
colnames(houses)<-c('CRIM','ZN','INDUS','CHAS','NOX','RM','AGE','DIS','RAD','TAX','PTRATIO','B','LSTAT','MEDV')
correlation <-cor(houses)
correlation
my_palette <- colorRampPalette(c("red", "yellow", "green"))(n = 299)
heatmap(correlation,main='correlation',cellnote = correlation,symm = TRUE,col=my_palette)
tt<-as.data.frame(summary(lm(data = houses,MEDV~.))$coefficients)
tt<-tt[order(-tt$Estimate),]
tt[c(1,2),]
tt$`Std. Error`
tt$`Std. Error
;
)
]
tt$`Std. Error`
tt
summary(lm(data = houses,MEDV~.)
)
